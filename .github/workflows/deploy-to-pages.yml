# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and Publish to GHPages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest test.py
    - name: Freeze with Flask-Frozen
      run: |
        export FLASK_DEBUG=True; export FLASK_DEVELOPMENT=True
        python app.py build
    - name: Init new repo and commit
      env:
        MY_EMAIL: action@gmail.com
        MY_NAME: GitHub Action
      run: |
        cd build
        git init
        git add -A
        git config --global user.email $MY_EMAIL
        git config --global user.name $MY_NAME
        git commit -am "Deploy on gh-pages"
        git subtree split --prefix build -b gh-pages
    - name: Push to pages
      uses: ad-m/github-push-action@v0.5.0
      with:
        github_token: ${{ secrets.GH_SECRET }}
        branch: gh-pages
        force: true
        directory: ./build
